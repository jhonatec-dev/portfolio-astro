---
interface Props {
  itemid: string;
  color?: "primary" | "secondary";
  size?: "small" | "medium" | "large";
  disabled?: boolean;
  id?: string;
}
const { itemid, color, size, disabled, id } = Astro.props;

const classes: string[] = [];
const baseClass = " rounded-md shadow focus:outline-none ";
classes.push(baseClass);

switch (color) {
  case "primary":
    classes.push("bg-blue-500 text-white hover:bg-blue-600");
    break;
  case "secondary":
    classes.push("bg-green-500 text-white hover:bg-green-600");
    break;
  default:
    classes.push("bg-gray-200 text-gray-800 hover:bg-gray-300");
    break;
}

switch (size) {
  case "small":
    classes.push("px-2 py-1 text-sm");
    break;
  case "medium":
    classes.push("px-4 py-2 text-base");
    break;
  case "large":
    classes.push("px-6 py-3 text-lg");
    break;
  default:
    classes.push("px-4 py-2 text-base");
    break;
}

if (disabled) {
  classes.push("opacity-50 cursor-not-allowed");
}
---

<button itemid={itemid} id={id} class={classes.join(" ")}>
  <slot />
</button>
