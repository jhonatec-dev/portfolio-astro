---
import Button from "@components/Base/Button.astro";
import Typo from "@components/Base/Typo.astro";
import Header from "@components/Header/index.astro";
import NavBar from "@components/NavBar";
import BaseLayout from "./BaseLayout.astro";
import Main from "./Main.astro";

interface Props {
  frontmatter: {
    title: string;
    description: string;
    image: {
      url: string;
      alt: string;
    };
    techs: string[];
  };
}

const { title, description, image, techs } = Astro.props.frontmatter;
---

<script>
  const classes: string[] = [];
  const baseClass =
    " rounded-md shadow dark:text-white cursor-pointer inline-block text-center my-2 px-4 py-2 transition duration-300 ease-in-out";
  classes.push(baseClass);
  classes.push("bg-sky-400 text-white hover:bg-sky-500");
  classes.push("dark:bg-cyan-600 text-white dark:hover:bg-cyan-500");
  classes.push("self-center");
  const pTags = document.querySelectorAll(".post-container p:has(a)");
  // console.log("pTags", pTags);
  pTags.forEach(
    (pTag) =>
      (pTag.className = "flex justify-center items-center flex-wrap gap-2")
  );
  const aTags = document.querySelectorAll(".post-container a");
  // console.log("aTags", aTags);
  aTags.forEach((aTag) => {
    aTag.className = classes.join(" ");
    aTag.setAttribute("target", "_blank");
  });
</script>
<script>
  // Recuperar blocos de código e adiciona botão de copiar
  const codeBlocks = document.querySelectorAll("pre:has(code)");
  codeBlocks.forEach((codeBlock) => {
    const button = document.createElement("button");
    const icon = document.createElement("img");
    icon.src = "/assets/icons/copy.svg";
    icon.alt = "Copy";
    icon.className = "w-6 h-6 group-hover:animate-bounce group-hover:invert";
    button.appendChild(icon);
    const label = document.createElement("span");
    label.innerText = "Copiado!";
    label.className =
      "hidden ml-2 transition duration-300 ease-in-out animate-pulse";
    button.appendChild(label);
    button.className =
      "group flex items-center bg-gray-400 hover:bg-gray-600 text-white dark:bg-gray-600 dark:hover:bg-gray-700 dark:text-white rounded-md px-2 py-1 absolute top-1 right-1 z-10 transition-all duration-300 ease-in-out";
    button.style.cursor = "pointer";
    button.addEventListener("click", () => {
      label.classList.remove("hidden");
      label.classList.add("animate-pulse");
      icon.classList.remove("group-hover:animate-bounce");
      icon.classList.remove("group-hover:invert");
      icon.classList.add("animate-pulse");
      icon.classList.add("invert");
      navigator.clipboard.writeText(
        codeBlock.querySelector("code")?.innerText ?? ""
      );
      setTimeout(() => {
        label.classList.add("hidden");
        label.classList.add("animate-pulse");
        icon.classList.add("group-hover:animate-bounce");
        icon.classList.add("group-hover:invert");
        icon.classList.remove("invert");
      }, 2500);
    });
    codeBlock.classList.add("relative");
    codeBlock.appendChild(button);
  });
</script>
<BaseLayout title={title} description={description} ogImageURL={image.url}>
  <Main>
    <Header />
    <NavBar client:only='react' />
    <Typo variant='h2'>{title}</Typo>
    <div class='bg-slate-200 dark:bg-stone-800 rounded-lg flex justify-center'>
      <img src={image.url} alt={image.alt} class='rounded' />
    </div>
    <div class='dark:text-white flex flex-col gap-4 mt-4 post-container'>
      <slot />
    </div>
    {
      techs && (
        <div class='mt-4'>
          <Typo variant='h5'>Techs usadas neste projeto</Typo>
          <div class='flex flex-wrap gap-2 justify-center'>
            {techs.map((tech) => (
              <Button color='info' href={`/techs/${tech}`} size='small'>
                {tech}
              </Button>
            ))}
          </div>
        </div>
      )
    }
  </Main>
</BaseLayout>
<style is:inline>
  .post-container a {
    display: block;
  }
</style>
